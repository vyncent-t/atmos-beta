{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\VideoContent.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport styles from \"./VideoContentStyles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getYouTubeID = require('get-youtube-id');\n\nfunction VideoContent() {\n  _s();\n\n  let totalVideoAvailable = localStorage.getItem(\"videocodelength\"); // create the next and prev logic for videos\n\n  const [arrayNum, setArrayNumber] = useState(0);\n\n  function nextHandler() {\n    setArrayNumber(arrayNum + 1);\n  }\n\n  function prevHandler() {\n    setArrayNumber(arrayNum - 1);\n  }\n\n  function onReady(e) {\n    // access to player in all event handlers via event.target\n    e.target.playVideo();\n    e.target.setVolume(40);\n  }\n\n  let youtubeFullCode = localStorage.getItem(`videocontentcode${arrayNum}`);\n  let currentVideo = youtubeFullCode;\n  var youtubeCode = getYouTubeID(currentVideo);\n\n  if (arrayNum < -1) {\n    nextHandler();\n  }\n\n  const opts = {\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      setVolume: 50\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.video_content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [arrayNum > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.video_button,\n          onClick: prevHandler,\n          children: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 38\n        }, this), arrayNum < totalVideoAvailable - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.video_button,\n          onClick: nextHandler,\n          children: \"next video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: youtubeCode,\n        opts: opts,\n        onReady: onReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VideoContent, \"psloAv34QYYXCdQrs/qHlsEHVbw=\");\n\n_c = VideoContent;\nexport default VideoContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoContent\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/VideoContent.js"],"names":["useState","YouTube","styles","getYouTubeID","require","VideoContent","totalVideoAvailable","localStorage","getItem","arrayNum","setArrayNumber","nextHandler","prevHandler","onReady","e","target","playVideo","setVolume","youtubeFullCode","currentVideo","youtubeCode","opts","playerVars","autoplay","video_content","video_button"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEpB,MAAIC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAA1B,CAFoB,CAIpB;;AACA,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BV,QAAQ,CAAC,CAAD,CAA3C;;AAEA,WAASW,WAAT,GAAuB;AACnBD,IAAAA,cAAc,CAACD,QAAQ,GAAG,CAAZ,CAAd;AACH;;AAED,WAASG,WAAT,GAAuB;AACnBF,IAAAA,cAAc,CAACD,QAAQ,GAAG,CAAZ,CAAd;AACH;;AAED,WAASI,OAAT,CAAiBC,CAAjB,EAAoB;AAChB;AACAA,IAAAA,CAAC,CAACC,MAAF,CAASC,SAAT;AACAF,IAAAA,CAAC,CAACC,MAAF,CAASE,SAAT,CAAmB,EAAnB;AACH;;AAED,MAAIC,eAAe,GAAGX,YAAY,CAACC,OAAb,CAAsB,mBAAkBC,QAAS,EAAjD,CAAtB;AACA,MAAIU,YAAY,GAAGD,eAAnB;AAEA,MAAIE,WAAW,GAAGjB,YAAY,CAACgB,YAAD,CAA9B;;AAEA,MAAIV,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AACfE,IAAAA,WAAW;AACd;;AAED,QAAMU,IAAI,GAAG;AAETC,IAAAA,UAAU,EAAE;AACR;AACAC,MAAAA,QAAQ,EAAE,CAFF;AAGRN,MAAAA,SAAS,EAAE;AAHH;AAFH,GAAb;AASA,sBACI;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACsB,aAAvB;AAAA,4BAII;AAAA,6BACI;AAAA,mBACKf,QAAQ,GAAG,CAAX,iBAAgB;AAAQ,UAAA,SAAS,EAAEP,MAAM,CAACuB,YAA1B;AAAwC,UAAA,OAAO,EAAEb,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADrB,EAEKH,QAAQ,GAAGH,mBAAmB,GAAG,CAAjC,iBAAsC;AAAQ,UAAA,SAAS,EAAEJ,MAAM,CAACuB,YAA1B;AAAwC,UAAA,OAAO,EAAEd,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF3C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUI;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAES,WAAlB;AAA+B,QAAA,IAAI,EAAEC,IAArC;AAA2C,QAAA,OAAO,EAAER;AAApD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GA7DQR,Y;;KAAAA,Y;AA+DT,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\"\r\nimport YouTube from \"react-youtube\"\r\nimport styles from \"./VideoContentStyles.module.css\"\r\n\r\nvar getYouTubeID = require('get-youtube-id')\r\n\r\nfunction VideoContent() {\r\n\r\n    let totalVideoAvailable = localStorage.getItem(\"videocodelength\")\r\n\r\n    // create the next and prev logic for videos\r\n    const [arrayNum, setArrayNumber] = useState(0)\r\n\r\n    function nextHandler() {\r\n        setArrayNumber(arrayNum + 1)\r\n    }\r\n\r\n    function prevHandler() {\r\n        setArrayNumber(arrayNum - 1)\r\n    }\r\n\r\n    function onReady(e) {\r\n        // access to player in all event handlers via event.target\r\n        e.target.playVideo();\r\n        e.target.setVolume(40)\r\n    }\r\n\r\n    let youtubeFullCode = localStorage.getItem(`videocontentcode${arrayNum}`)\r\n    let currentVideo = youtubeFullCode\r\n\r\n    var youtubeCode = getYouTubeID(currentVideo)\r\n\r\n    if (arrayNum < -1) {\r\n        nextHandler()\r\n    }\r\n\r\n    const opts = {\r\n\r\n        playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 1,\r\n            setVolume: 50\r\n        },\r\n    }\r\n\r\n    return (\r\n        <div className={styles.video_content}>\r\n            {/* <p>current array item: {arrayNum}</p>\r\n            <p>current array length: {youtubeArray.length}</p>\r\n            <p>{youtubeArray[0]}</p> */}\r\n            <div >\r\n                <div >\r\n                    {arrayNum > 0 && <button className={styles.video_button} onClick={prevHandler}>back</button>}\r\n                    {arrayNum < totalVideoAvailable - 1 && <button className={styles.video_button} onClick={nextHandler}>next video</button>}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <YouTube videoId={youtubeCode} opts={opts} onReady={onReady} />\r\n                {/* <iframe width=\"560\" height=\"315\"\r\n                    src={currentVideo} title=\"YouTube video player\"\r\n                    frameborder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\r\n                </iframe> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default VideoContent"]},"metadata":{},"sourceType":"module"}