{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\soundBar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction Soundbar(props) {\n  _s();\n\n  let token = localStorage.getItem(\"spotifyToken\");\n  const [songAudioLevel, setAudioLevel] = useState(70);\n\n  function volumeControl(e) {\n    console.log(`setting audio level ${e.target.value}`);\n    setAudioLevel(e.target.value);\n  }\n\n  useEffect(() => {\n    axios.post('/spotify-control-audio', {\n      userData: {\n        accessToken: `${token}`,\n        level: songAudioLevel\n      }\n    }).then(res => {\n      console.log(\"volume set\");\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [songAudioLevel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-75\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"m-1 btn btn-light\",\n        onClick: () => {\n          setAudioLevel(songAudioLevel - 10);\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"m-1 btn btn-light\",\n        onClick: () => {\n          setAudioLevel(songAudioLevel + 10);\n        },\n        children: \" +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"musicAudio\",\n          className: \"form-label\",\n          children: [\"Speaker \", songAudioLevel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: \"m-1 btn btn-light\",\n          onChange: volumeControl,\n          id: \"musicAudio\",\n          value: songAudioLevel,\n          min: \"0\",\n          max: \"100\",\n          step: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Soundbar, \"xWYhmQPFPfnNDZgOEWTGN75wm3w=\");\n\n_c = Soundbar;\nexport default Soundbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Soundbar\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/soundBar.js"],"names":["useEffect","useState","axios","require","Soundbar","props","token","localStorage","getItem","songAudioLevel","setAudioLevel","volumeControl","e","console","log","target","value","post","userData","accessToken","level","then","res","catch","err"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAMA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ;AAGA,QAAM,CAACC,cAAD,EAAiBC,aAAjB,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASU,aAAT,CAAuBC,CAAvB,EAA0B;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBF,CAAC,CAACG,MAAF,CAASC,KAAM,EAAlD;AACAN,IAAAA,aAAa,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAb;AACH;;AAEDhB,EAAAA,SAAS,CACL,MAAM;AACFE,IAAAA,KAAK,CAACe,IAAN,CAAW,wBAAX,EAAqC;AACjCC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,WAAW,EAAG,GAAEb,KAAM,EADhB;AAENc,QAAAA,KAAK,EAAEX;AAFD;AADuB,KAArC,EAKGY,IALH,CAMKC,GAAD,IAAS;AACLT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH,KATL,EAUEC,KAVF,CAWKC,GAAD,IAAS;AACLX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACH,KAbL;AAeH,GAjBI,EAiBF,CAACf,cAAD,CAjBE,CAAT;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAEZ;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,MAAM;AAAEC,UAAAA,aAAa,CAACD,cAAc,GAAG,EAAlB,CAAb;AAAoC,SAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFY,eAGR;AAAS,QAAA,SAAS,EAAG,mBAArB;AAAyC,QAAA,OAAO,EAAI,MAAM;AAAEC,UAAAA,aAAa,CAACD,cAAc,GAAG,EAAlB,CAAb;AAAoC,SAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHQ,eAIJ;AAAA,gCACI;AAAO,UAAA,GAAG,EAAC,YAAX;AAAwB,UAAA,SAAS,EAAC,YAAlC;AAAA,iCAAwDA,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,SAAS,EAAC,mBAFd;AAGI,UAAA,QAAQ,EAAEE,aAHd;AAII,UAAA,EAAE,EAAC,YAJP;AAKI,UAAA,KAAK,EAAEF,cALX;AAMI,UAAA,GAAG,EAAC,GANR;AAOI,UAAA,GAAG,EAAC,KAPR;AAQI,UAAA,IAAI,EAAC;AART;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAtDQL,Q;;KAAAA,Q;AAwDT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nconst axios = require('axios')\r\n\r\n\r\n\r\n\r\n\r\nfunction Soundbar(props) {\r\n    let token = localStorage.getItem(\"spotifyToken\")\r\n\r\n\r\n    const [songAudioLevel, setAudioLevel] = useState(70)\r\n\r\n    function volumeControl(e) {\r\n        console.log(`setting audio level ${e.target.value}`)\r\n        setAudioLevel(e.target.value)\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.post('/spotify-control-audio', {\r\n                userData: {\r\n                    accessToken: `${token}`,\r\n                    level: songAudioLevel\r\n                }\r\n            }).then(\r\n                (res) => {\r\n                    console.log(\"volume set\")\r\n                    console.log(res)\r\n                }\r\n            ).catch(\r\n                (err) => {\r\n                    console.log(err)\r\n                }\r\n            )\r\n        }, [songAudioLevel]\r\n    )\r\n\r\n\r\n    return (\r\n        <div className=\"w-75\">\r\n            <div className=\"w-50\">\r\n\r\n<button className=\"m-1 btn btn-light\" onClick={() => { setAudioLevel(songAudioLevel - 10) }}>-</button>  \r\n    < button className = \"m-1 btn btn-light\" onClick = {() => { setAudioLevel(songAudioLevel + 10) }}> +</button >\r\n        <div>\r\n            <label for=\"musicAudio\" className=\"form-label\">Speaker {songAudioLevel}</label>\r\n            <input\r\n                type=\"range\"\r\n                className=\"m-1 btn btn-light\"\r\n                onChange={volumeControl}\r\n                id=\"musicAudio\"\r\n                value={songAudioLevel}\r\n                min=\"0\"\r\n                max=\"100\"\r\n                step=\"10\"\r\n            />\r\n        </div>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Soundbar"]},"metadata":{},"sourceType":"module"}