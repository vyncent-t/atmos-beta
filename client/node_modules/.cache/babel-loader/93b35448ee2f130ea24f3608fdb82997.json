{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\MusicForm.js\",\n    _s = $RefreshSig$();\n\nimport MusicButton from \"./MusicButton\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MusicForm(props) {\n  _s();\n\n  var musicid = useSelector(state => state.spotify.clientid);\n  const musicToken = localStorage.getItem(\"spotifyToken\");\n  const musicChoice = useSelector(state => state.content.musicButtonChoice);\n  console.log(`reading ON MUSIC ID FROM STATE ${musicid}`);\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(`${musicToken}`);\n  useEffect(() => {\n    if (musicToken === \"none token\") return;\n    spotifyApi.setAccessToken(musicToken);\n  }, [musicToken]);\n\n  function updateContent(content) {\n    for (let i = 0; i < 10; i++) {\n      localStorage.setItem(`musicplaylistcode${i}`, `${content[i]}`);\n    }\n  }\n\n  if (musicChoice === \"none\") {\n    spotifyApi.searchPlaylists(\"peaceful\").then(res => {\n      console.log(`music playlist res:`, res.body);\n      var playlistMusicItems = res.body.playlists.items;\n      var playlistCodes = playlistMusicItems.map(playlist => {\n        return playlist.uri;\n      });\n      updateContent(playlistCodes);\n    }).catch(err => {\n      console.log('Something went wrong!', err);\n    });\n  } else {\n    spotifyApi.searchPlaylists(`${musicChoice}`).then(res => {\n      console.log(`music playlist res:`, res.body);\n      var playlistMusicItems = res.body.playlists.items;\n      var playlistCodes = playlistMusicItems.map(playlist => {\n        return playlist.uri;\n      });\n      updateContent(playlistCodes);\n    }).catch(err => {\n      console.log('Something went wrong!', err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-dark m-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Music Choices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Your current music choice: ${musicChoice}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Piano\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Coffee Shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Acoustic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Lofi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Yoga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MusicForm, \"RCSXl4ZVscmu4ZGnlLva3Yaq5ag=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = MusicForm;\nexport default MusicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicForm\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/MusicForm.js"],"names":["MusicButton","useEffect","useSelector","SpotifyWebApi","MusicForm","props","musicid","state","spotify","clientid","musicToken","localStorage","getItem","musicChoice","content","musicButtonChoice","console","log","spotifyApi","setAccessToken","updateContent","i","setItem","searchPlaylists","then","res","body","playlistMusicItems","playlists","items","playlistCodes","map","playlist","uri","catch","err"],"mappings":"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","sourcesContent":["import MusicButton from \"./MusicButton\"\r\nimport { useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport SpotifyWebApi from \"spotify-web-api-node\"\r\n\r\n\r\n\r\nfunction MusicForm(props) {\r\n    var musicid = useSelector((state) => state.spotify.clientid)\r\n    const musicToken = localStorage.getItem(\"spotifyToken\")\r\n    const musicChoice = useSelector((state) => state.content.musicButtonChoice)\r\n\r\n    console.log(`reading ON MUSIC ID FROM STATE ${musicid}`)\r\n\r\n    const spotifyApi = new SpotifyWebApi()\r\n\r\n    spotifyApi.setAccessToken(`${musicToken}`)\r\n\r\n    useEffect(() => {\r\n        if (musicToken === \"none token\") return\r\n        spotifyApi.setAccessToken(musicToken)\r\n    }, [musicToken])\r\n\r\n\r\n    function updateContent(content) {\r\n        for (let i = 0; i < 10; i++) {\r\n            localStorage.setItem(`musicplaylistcode${i}`, `${content[i]}`)\r\n        }\r\n    }\r\n\r\n    if (musicChoice === \"none\") {\r\n        spotifyApi.searchPlaylists(\"peaceful\").then(\r\n            (res) => {\r\n                console.log(`music playlist res:`, res.body)\r\n                var playlistMusicItems = res.body.playlists.items\r\n                var playlistCodes = playlistMusicItems.map(playlist => {\r\n                    return playlist.uri\r\n                })\r\n                updateContent(playlistCodes)\r\n            }\r\n        ).catch((err) => {\r\n            console.log('Something went wrong!', err);\r\n        })\r\n    } else {\r\n        spotifyApi.searchPlaylists(`${musicChoice}`).then(\r\n            (res) => {\r\n                console.log(`music playlist res:`, res.body)\r\n                var playlistMusicItems = res.body.playlists.items\r\n                var playlistCodes = playlistMusicItems.map(playlist => {\r\n                    return playlist.uri\r\n                })\r\n                updateContent(playlistCodes)\r\n            }\r\n        ).catch((err) => {\r\n            console.log('Something went wrong!', err);\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"card bg-dark m-4\">\r\n            <div className=\"card-body\">\r\n                <div className=\"d-flex flex-column justify-content-center\">\r\n                    <div className=\"card-title\">\r\n                        <h2>Music Choices</h2>\r\n                    </div>\r\n                    <div className=\"card-text\">\r\n                        <p>{`Your current music choice: ${musicChoice}`}</p>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column justify-content-center\">\r\n                        <MusicButton musicKeyword=\"Piano\" />\r\n                        <MusicButton musicKeyword=\"Coffee Shop\" />\r\n                        <MusicButton musicKeyword=\"Acoustic\" />\r\n                        <MusicButton musicKeyword=\"Lofi\" />\r\n                        <MusicButton musicKeyword=\"Yoga\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicForm"]},"metadata":{},"sourceType":"module"}