{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\SpotifySection.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpotifySection(props) {\n  _s();\n\n  // use state in order to select a playlist id from local storage\n  const [arrayNum, setArrayNumber] = useState(0);\n\n  function nextHandler() {\n    setArrayNumber(arrayNum + 1);\n  }\n\n  function prevHandler() {\n    setArrayNumber(arrayNum - 1);\n  }\n\n  if (arrayNum < -1) {\n    nextHandler();\n  }\n\n  if (arrayNum > 10) {\n    prevHandler();\n  }\n\n  function searchPlaylist(code) {\n    console.log(`reading current playlist for  ${code}`);\n  } // var accessToken = localStorage.getItem(\"spotifyToken\")\n\n\n  var playlistCode = localStorage.getItem(`musicplaylistcode${arrayNum}`);\n  console.log(`current spotify playlist`, playlistCode);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-self-center mb-4 btn-group\",\n        children: [arrayNum > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-light\",\n          onClick: prevHandler,\n          children: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 38\n        }, this), arrayNum < 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-light\",\n          onClick: nextHandler,\n          children: \"next playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [searchPlaylist(playlistCode), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SpotifySection, \"psloAv34QYYXCdQrs/qHlsEHVbw=\");\n\n_c = SpotifySection;\nexport default SpotifySection;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifySection\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/SpotifySection.js"],"names":["React","Fragment","useState","SpotifySection","props","arrayNum","setArrayNumber","nextHandler","prevHandler","searchPlaylist","code","console","log","playlistCode","localStorage","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3B;AACA,QAAM,CAACC,QAAD,EAAWC,cAAX,IAA6BJ,QAAQ,CAAC,CAAD,CAA3C;;AAEA,WAASK,WAAT,GAAuB;AACnBD,IAAAA,cAAc,CAACD,QAAQ,GAAG,CAAZ,CAAd;AACH;;AAED,WAASG,WAAT,GAAuB;AACnBF,IAAAA,cAAc,CAACD,QAAQ,GAAG,CAAZ,CAAd;AACH;;AAED,MAAIA,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AACfE,IAAAA,WAAW;AACd;;AAED,MAAIF,QAAQ,GAAG,EAAf,EAAmB;AACfG,IAAAA,WAAW;AACd;;AAKD,WAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAE1BC,IAAAA,OAAO,CAACC,GAAR,CAAa,iCAAgCF,IAAK,EAAlD;AACH,GA3B0B,CAgC3B;;;AACA,MAAIG,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAsB,oBAAmBV,QAAS,EAAlD,CAAnB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAa,0BAAb,EAAwCC,YAAxC;AAEA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,mBACKR,QAAQ,GAAG,CAAX,iBAAgB;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,OAAO,EAAEG,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADrB,EAEKH,QAAQ,GAAG,EAAX,iBAAiB;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAA0C,UAAA,OAAO,EAAEE,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,mBAIKE,cAAc,CAACI,YAAD,CAJnB,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAhEQV,c;;KAAAA,c;AAkET,eAAeA,cAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nimport { useState } from \"react\"\r\n\r\nfunction SpotifySection(props) {\r\n\r\n    // use state in order to select a playlist id from local storage\r\n    const [arrayNum, setArrayNumber] = useState(0)\r\n\r\n    function nextHandler() {\r\n        setArrayNumber(arrayNum + 1)\r\n    }\r\n\r\n    function prevHandler() {\r\n        setArrayNumber(arrayNum - 1)\r\n    }\r\n\r\n    if (arrayNum < -1) {\r\n        nextHandler()\r\n    }\r\n\r\n    if (arrayNum > 10) {\r\n        prevHandler()\r\n    }\r\n\r\n\r\n\r\n\r\n    function searchPlaylist(code) {\r\n\r\n        console.log(`reading current playlist for  ${code}`)\r\n    }\r\n\r\n\r\n\r\n\r\n    // var accessToken = localStorage.getItem(\"spotifyToken\")\r\n    var playlistCode = localStorage.getItem(`musicplaylistcode${arrayNum}`)\r\n    console.log(`current spotify playlist`, playlistCode)\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"d-flex flex-column justify-content-center\">\r\n                <div className=\"align-self-center mb-4 btn-group\">\r\n                    {arrayNum > 0 && <button className=\"btn btn-outline-light\" onClick={prevHandler}>back</button>}\r\n                    {arrayNum < 10 && <button className=\"btn btn-outline-light\" onClick={nextHandler}>next playlist</button>}\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div>\r\n\r\n                    {/* create a fetch request / axios request to our custom api point to search for and pull playlist data whenever the page renders or the playlist slot on line 25 is changed by hitting next playlist */}\r\n\r\n                    {searchPlaylist(playlistCode)}\r\n\r\n                    <div>\r\n\r\n                        {/* create a list of songs component under the album component */}\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SpotifySection"]},"metadata":{},"sourceType":"module"}