{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nexport function getBaseProps(props) {\n  var _a, _b, _c, _d, _e, _f, _g;\n\n  return {\n    axis: (_a = props === null || props === void 0 ? void 0 : props.axis) !== null && _a !== void 0 ? _a : 'x',\n    xMax: (_b = props === null || props === void 0 ? void 0 : props.xMax) !== null && _b !== void 0 ? _b : 100,\n    xMin: (_c = props === null || props === void 0 ? void 0 : props.xMin) !== null && _c !== void 0 ? _c : 0,\n    xStep: (_d = props === null || props === void 0 ? void 0 : props.xStep) !== null && _d !== void 0 ? _d : 1,\n    yMax: (_e = props === null || props === void 0 ? void 0 : props.yMax) !== null && _e !== void 0 ? _e : 100,\n    yMin: (_f = props === null || props === void 0 ? void 0 : props.yMin) !== null && _f !== void 0 ? _f : 0,\n    yStep: (_g = props === null || props === void 0 ? void 0 : props.yStep) !== null && _g !== void 0 ? _g : 1\n  };\n}\nexport function getCoordinates(e, lastPosition) {\n  if ('touches' in e) {\n    var _a = __read(e.touches, 1),\n        touch = _a[0];\n\n    return {\n      x: touch ? touch.clientX : lastPosition.x,\n      y: touch ? touch.clientY : lastPosition.y\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}\nexport function getPosition(position, props, el) {\n  var _a = getBaseProps(props),\n      axis = _a.axis,\n      xMax = _a.xMax,\n      xMin = _a.xMin,\n      xStep = _a.xStep,\n      yMax = _a.yMax,\n      yMin = _a.yMin,\n      yStep = _a.yStep;\n\n  var _b = (el === null || el === void 0 ? void 0 : el.getBoundingClientRect()) || {},\n      _c = _b.height,\n      height = _c === void 0 ? xMax : _c,\n      _d = _b.width,\n      width = _d === void 0 ? yMax : _d;\n\n  var x = position.x,\n      y = position.y;\n  var dx = 0;\n  var dy = 0;\n\n  if (x < 0) {\n    x = 0;\n  }\n\n  if (x > width) {\n    x = width;\n  }\n\n  if (y < 0) {\n    y = 0;\n  }\n\n  if (y > height) {\n    y = height;\n  }\n\n  if (axis === 'x' || axis === 'xy') {\n    dx = Math.round(x / width * (xMax - xMin));\n  }\n\n  if (axis === 'y' || axis === 'xy') {\n    dy = Math.round(y / height * (yMax - yMin));\n  }\n\n  return {\n    x: round(dx, xStep),\n    y: round(dy, yStep)\n  };\n}\n/**\n * Get a normalized value\n */\n\nexport function getNormalizedValue(name, props) {\n  var value = props[name] || 0;\n  var min = name === 'x' ? props.xMin : props.yMin;\n  var max = name === 'x' ? props.xMax : props.yMax;\n\n  if (isNumber(min) && value < min) {\n    return min;\n  }\n\n  if (isNumber(max) && value > max) {\n    return max;\n  }\n\n  return value;\n}\n/**\n * Check if the value is a number\n */\n\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\n/**\n * Check if the value is undefined\n */\n\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Parse a string into a number or return it if it's already a number\n */\n\nexport function num(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, 10);\n}\n/**\n *  Remove properties from an object\n */\n\nexport function removeProperties(input) {\n  var filter = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    filter[_i - 1] = arguments[_i];\n  }\n\n  var output = {};\n\n  for (var key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output;\n}\nexport function round(value, increment) {\n  return Math.ceil(value / increment) * increment;\n}","map":{"version":3,"mappings":"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","names":["getBaseProps","props","axis","_a","xMax","_b","xMin","_c","xStep","_d","yMax","_e","yMin","_f","yStep","_g","getCoordinates","e","lastPosition","touches","touch","x","clientX","y","clientY","getPosition","position","el","getBoundingClientRect","height","width","dx","dy","Math","round","getNormalizedValue","name","value","min","max","isNumber","isUndefined","num","parseInt","removeProperties","input","filter","output","key","hasOwnProperty","call","includes","increment","ceil"],"sourceRoot":"","sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}