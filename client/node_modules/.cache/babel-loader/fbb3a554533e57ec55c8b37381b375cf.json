{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\MusicForm.js\",\n    _s = $RefreshSig$();\n\nimport MusicButton from \"./MusicButton\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction MusicForm(props) {\n  _s();\n\n  var musicid = useSelector(state => state.spotify.clientid);\n  const musicToken = localStorage.getItem(\"spotifyToken\");\n  const musicChoice = useSelector(state => state.content.musicButtonChoice);\n  console.log(`reading ON MUSIC ID FROM STATE ${musicid}`); // this function will be ran within the promise of each api req below, it will take the entire response object and select the first 10 playlist items to be saved in local storage\n\n  function updateMusicContent(content) {\n    for (let i = 0; i < 10; i++) {\n      localStorage.setItem(`musicplaylistcode${i}`, `${content[i]}`);\n    }\n  } // by default the fresh menu has a value of \"none\" for the music genre playlist, this makes the default data search for peaceful unless a music genre is clicked, making the musicChoice variable change - but the button to create a room isnt going to render unless the user clicks both music and video options\n\n\n  if (musicChoice === \"none\") {\n    axios.post('/spotify-set', {\n      musicKey: \"peaceful\"\n    }).then(res => {\n      console.log(`music playlist res:`, res.body); // the following is printed on the browser console\n\n      console.log(\"default playlist search\");\n      console.log(res);\n      console.log(`reading res data ${res.data}`); // accesstoken = res.data.access_token\n      // var playlistMusicItems = res.body.playlists.items\n      // var playlistCodes = playlistMusicItems.map(playlist => {\n      //     return playlist.id\n      // })\n      // updateMusicContent(playlistCodes)\n    }).catch(error => {\n      console.log(error);\n    });\n  } else {\n    axios.post('/spotify-set', {\n      musicKey: `${musicChoice}`\n    }).then(res => {\n      console.log(`music playlist res:`, res.body); // the following is printed on the browser console\n\n      console.log(`user custom music for ${musicChoice}`);\n      console.log(res);\n      console.log(`reading res data ${res.data}`); // accesstoken = res.data.access_token\n      // var playlistMusicItems = res.body.playlists.items\n      // var playlistCodes = playlistMusicItems.map(playlist => {\n      //     return playlist.id\n      // })\n      // updateMusicContent(playlistCodes)\n    }).catch(error => {\n      console.log(error);\n    });\n  } // else {\n  //     spotifyApi.searchPlaylists(`${musicChoice}`).then(\n  //         (res) => {\n  //             console.log(`music playlist res:`, res.body)\n  //             var playlistMusicItems = res.body.playlists.items\n  //             var playlistCodes = playlistMusicItems.map(playlist => {\n  //                 return playlist.id\n  //             })\n  //             updateMusicContent(playlistCodes)\n  //         }\n  //     ).catch((err) => {\n  //         console.log('Something went wrong!', err);\n  //     })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-dark m-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Music Choices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Your current music choice: ${musicChoice}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Piano\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Coffee Shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Acoustic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Lofi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n            musicKeyword: \"Yoga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MusicForm, \"5y9LOvFDAqe1ByGDyLlSuengwJs=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = MusicForm;\nexport default MusicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicForm\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/MusicForm.js"],"names":["MusicButton","useEffect","useSelector","SpotifyWebApi","axios","require","MusicForm","props","musicid","state","spotify","clientid","musicToken","localStorage","getItem","musicChoice","content","musicButtonChoice","console","log","updateMusicContent","i","setItem","post","musicKey","then","res","body","data","catch","error"],"mappings":"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","sourcesContent":["import MusicButton from \"./MusicButton\"\r\nimport { useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport SpotifyWebApi from \"spotify-web-api-node\"\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nfunction MusicForm(props) {\r\n    var musicid = useSelector((state) => state.spotify.clientid)\r\n    const musicToken = localStorage.getItem(\"spotifyToken\")\r\n    const musicChoice = useSelector((state) => state.content.musicButtonChoice)\r\n\r\n    console.log(`reading ON MUSIC ID FROM STATE ${musicid}`)\r\n\r\n\r\n\r\n\r\n    // this function will be ran within the promise of each api req below, it will take the entire response object and select the first 10 playlist items to be saved in local storage\r\n\r\n    function updateMusicContent(content) {\r\n        for (let i = 0; i < 10; i++) {\r\n            localStorage.setItem(`musicplaylistcode${i}`, `${content[i]}`)\r\n        }\r\n    }\r\n\r\n\r\n    // by default the fresh menu has a value of \"none\" for the music genre playlist, this makes the default data search for peaceful unless a music genre is clicked, making the musicChoice variable change - but the button to create a room isnt going to render unless the user clicks both music and video options\r\n\r\n    if (musicChoice === \"none\") {\r\n\r\n        axios.post('/spotify-set', {\r\n            musicKey: \"peaceful\"\r\n        }).then(\r\n            (res) => {\r\n                console.log(`music playlist res:`, res.body)\r\n                // the following is printed on the browser console\r\n                console.log(\"default playlist search\")\r\n                console.log(res)\r\n                console.log(`reading res data ${res.data}`)\r\n                // accesstoken = res.data.access_token\r\n\r\n\r\n\r\n\r\n                // var playlistMusicItems = res.body.playlists.items\r\n                // var playlistCodes = playlistMusicItems.map(playlist => {\r\n                //     return playlist.id\r\n                // })\r\n                // updateMusicContent(playlistCodes)\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    } else {\r\n        axios.post('/spotify-set', {\r\n            musicKey: `${musicChoice}`\r\n        }).then(\r\n            (res) => {\r\n                console.log(`music playlist res:`, res.body)\r\n                // the following is printed on the browser console\r\n                console.log(`user custom music for ${musicChoice}`)\r\n                console.log(res)\r\n                console.log(`reading res data ${res.data}`)\r\n                // accesstoken = res.data.access_token\r\n\r\n\r\n\r\n                // var playlistMusicItems = res.body.playlists.items\r\n                // var playlistCodes = playlistMusicItems.map(playlist => {\r\n                //     return playlist.id\r\n                // })\r\n                // updateMusicContent(playlistCodes)\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    // else {\r\n    //     spotifyApi.searchPlaylists(`${musicChoice}`).then(\r\n    //         (res) => {\r\n    //             console.log(`music playlist res:`, res.body)\r\n    //             var playlistMusicItems = res.body.playlists.items\r\n    //             var playlistCodes = playlistMusicItems.map(playlist => {\r\n    //                 return playlist.id\r\n    //             })\r\n    //             updateMusicContent(playlistCodes)\r\n    //         }\r\n    //     ).catch((err) => {\r\n    //         console.log('Something went wrong!', err);\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"card bg-dark m-4\">\r\n            <div className=\"card-body\">\r\n                <div className=\"d-flex flex-column justify-content-center\">\r\n                    <div className=\"card-title\">\r\n                        <h2>Music Choices</h2>\r\n                    </div>\r\n                    <div className=\"card-text\">\r\n                        <p>{`Your current music choice: ${musicChoice}`}</p>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column justify-content-center\">\r\n                        <MusicButton musicKeyword=\"Piano\" />\r\n                        <MusicButton musicKeyword=\"Coffee Shop\" />\r\n                        <MusicButton musicKeyword=\"Acoustic\" />\r\n                        <MusicButton musicKeyword=\"Lofi\" />\r\n                        <MusicButton musicKeyword=\"Yoga\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicForm"]},"metadata":{},"sourceType":"module"}