{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\SpotifySection.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpotifySection(props) {\n  _s();\n\n  // use state in order to select a playlist id from local storage\n  const [arrayNum, setArrayNumber] = useState(0);\n\n  function nextHandler() {\n    setArrayNumber(arrayNum + 1);\n  }\n\n  function prevHandler() {\n    setArrayNumber(arrayNum - 1);\n  }\n\n  if (arrayNum < -1) {\n    nextHandler();\n  }\n\n  if (arrayNum > 10) {\n    prevHandler();\n  }\n\n  function searchPlaylist(ID) {\n    console.log(`reading current playlist for  ${ID}`);\n  }\n\n  var accessToken = localStorage.getItem(\"spotifyToken\");\n  var playlistID = localStorage.getItem(`musicplaylistcode${arrayNum}`);\n  console.log(`current spotify playlist`, playlistID);\n  axios.post('/spotify-set', {\n    userData: {\n      playlistID: `${playlistID}`,\n      accessToken: `${accessToken}`\n    }\n  }).then(res => {\n    console.log(`music playlist res:`, res); // the following is printed on the browser console\n\n    console.log(`user custom music for default`); // response print from the spotify custom you need to expand in browser console\n\n    console.log(res);\n    console.log(\"THE LINE ABOVE IS THE RES FROM THE SPOTIFY CUSTOM YOU NEED TO EXPAND IT INTO DATA THEN PLAYLISTS\"); // NEED TO FORMAT AS STRING COMMA OBJECT FOR IT TO READ IN CONSOLE\n\n    console.log(`reading music playlist res: `, res.data); // now we use the function from above\n\n    var playlistMusicItems = res.data;\n    var playlistCodes = playlistMusicItems.map(playlistCode => {\n      return playlistCode.id;\n    });\n    updateMusicContent(playlistCodes);\n  }).catch(error => {\n    console.log(error);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-self-center mb-4 btn-group\",\n        children: [arrayNum > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-light\",\n          onClick: prevHandler,\n          children: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 38\n        }, this), arrayNum < 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-light\",\n          onClick: nextHandler,\n          children: \"next playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [searchPlaylist(playlistCode), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SpotifySection, \"psloAv34QYYXCdQrs/qHlsEHVbw=\");\n\n_c = SpotifySection;\nexport default SpotifySection;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifySection\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/SpotifySection.js"],"names":["React","Fragment","useState","SpotifySection","props","arrayNum","setArrayNumber","nextHandler","prevHandler","searchPlaylist","ID","console","log","accessToken","localStorage","getItem","playlistID","axios","post","userData","then","res","data","playlistMusicItems","playlistCodes","map","playlistCode","id","updateMusicContent","catch","error"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nimport { useState } from \"react\"\r\n\r\nfunction SpotifySection(props) {\r\n\r\n    // use state in order to select a playlist id from local storage\r\n    const [arrayNum, setArrayNumber] = useState(0)\r\n\r\n    function nextHandler() {\r\n        setArrayNumber(arrayNum + 1)\r\n    }\r\n\r\n    function prevHandler() {\r\n        setArrayNumber(arrayNum - 1)\r\n    }\r\n\r\n    if (arrayNum < -1) {\r\n        nextHandler()\r\n    }\r\n\r\n    if (arrayNum > 10) {\r\n        prevHandler()\r\n    }\r\n\r\n\r\n\r\n\r\n    function searchPlaylist(ID) {\r\n\r\n        console.log(`reading current playlist for  ${ID}`)\r\n    }\r\n\r\n\r\n\r\n    var accessToken = localStorage.getItem(\"spotifyToken\")\r\n\r\n    var playlistID = localStorage.getItem(`musicplaylistcode${arrayNum}`)\r\n    console.log(`current spotify playlist`, playlistID)\r\n\r\n    axios.post('/spotify-set', {\r\n        userData: {\r\n            playlistID: `${playlistID}`,\r\n            accessToken: `${accessToken}`\r\n        }\r\n    }).then(\r\n        (res) => {\r\n            console.log(`music playlist res:`, res)\r\n            // the following is printed on the browser console\r\n            console.log(`user custom music for default`)\r\n            // response print from the spotify custom you need to expand in browser console\r\n            console.log(res)\r\n            console.log(\"THE LINE ABOVE IS THE RES FROM THE SPOTIFY CUSTOM YOU NEED TO EXPAND IT INTO DATA THEN PLAYLISTS\")\r\n            // NEED TO FORMAT AS STRING COMMA OBJECT FOR IT TO READ IN CONSOLE\r\n            console.log(`reading music playlist res: `, res.data)\r\n\r\n            // now we use the function from above\r\n\r\n            var playlistMusicItems = res.data\r\n            var playlistCodes = playlistMusicItems.map(playlistCode => {\r\n                return playlistCode.id\r\n            })\r\n            updateMusicContent(playlistCodes)\r\n        }\r\n    ).catch(\r\n        (error) => {\r\n            console.log(error)\r\n        }\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"d-flex flex-column justify-content-center\">\r\n                <div className=\"align-self-center mb-4 btn-group\">\r\n                    {arrayNum > 0 && <button className=\"btn btn-outline-light\" onClick={prevHandler}>back</button>}\r\n                    {arrayNum < 10 && <button className=\"btn btn-outline-light\" onClick={nextHandler}>next playlist</button>}\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div>\r\n\r\n                    {/* create a fetch request / axios request to our custom api point to search for and pull playlist data whenever the page renders or the playlist slot on line 25 is changed by hitting next playlist */}\r\n\r\n                    {searchPlaylist(playlistCode)}\r\n\r\n                    <div>\r\n\r\n                        {/* create a list of songs component under the album component */}\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SpotifySection"]},"metadata":{},"sourceType":"module"}