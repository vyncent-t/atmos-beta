{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\MusicContent.js\";\n// import { useEffect } from \"react\"\n// import { useSelector } from \"react-redux\"\nimport PauseButton from \"./pauseButton\";\nimport SpotifySection from \"./SpotifySection\"; // import SpotifyWebApi from \"spotify-web-api-node\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MusicContent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card bg-success rounded \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(SpotifySection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PauseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MusicContent;\nexport default MusicContent; // var musicid = useSelector((state) => state.spotify.clientid)\n// const showContent = useSelector((state) => state.controls.showContentBox)\n// const musicToken = useSelector((state) => state.spotify.accesstoken)\n// const userMusic = useSelector((state) => state.content.musicButtonChoice)\n// console.log(`spotify current search keyword from button is: ${userMusic}`)\n// console.log(`spotify current token is: ${musicToken}`)\n// const spotifyApi = new SpotifyWebApi({\n//     clientId: `${musicid}`,\n// })\n// spotifyApi.setAccessToken(`${musicToken}`)\n// useEffect(() => {\n//     if (musicToken === \"none token\") return\n//     spotifyApi.setAccessToken(musicToken)\n// }, [musicToken])\n// const musicDummyID = `1DFixLWuPkv3KT3TnV35m3`\n// var userMusicContent = `pending`\n// spotifyApi.searchPlaylists(`${userMusic}`).then(\n//     (res) => {\n//         //save to an array?\n//         console.log(`playlist res:`, res.body)\n//         var playlistMusic = res.body.playlists.items\n//         var playlistCodes = playlistMusic.map(playlist => {\n//             return playlist.id\n//         })\n//         userMusicContent = playlistCodes\n//         console.log(\"current content list\", userMusicContent)\n//     }\n// ).catch((err) => {\n//     console.log('Something went wrong!', err);\n// })\n// console.log(userMusicContent)\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicContent\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/MusicContent.js"],"names":["PauseButton","SpotifySection","MusicContent"],"mappings":";AAAA;AACA;AAEA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;;;AAIA,SAASC,YAAT,GAAwB;AAGpB,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;KAbQA,Y;AAeT,eAAeA,YAAf,C,CAKI;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { useEffect } from \"react\"\r\n// import { useSelector } from \"react-redux\"\r\n\r\nimport PauseButton from \"./pauseButton\"\r\nimport SpotifySection from \"./SpotifySection\"\r\n// import SpotifyWebApi from \"spotify-web-api-node\"\r\n\r\n\r\n\r\nfunction MusicContent() {\r\n\r\n\r\n    return (\r\n        <div className=\"card bg-success rounded \">\r\n            <div className=\"card-body\">\r\n                <SpotifySection />\r\n                {/* <iframe title=\"playlist\" src={`https://open.spotify.com/embed/playlist/${musicPlaylist[(currentPlaylist)]}`} width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe> */}\r\n\r\n                <PauseButton />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicContent\r\n\r\n\r\n\r\n\r\n    // var musicid = useSelector((state) => state.spotify.clientid)\r\n    // const showContent = useSelector((state) => state.controls.showContentBox)\r\n    // const musicToken = useSelector((state) => state.spotify.accesstoken)\r\n    // const userMusic = useSelector((state) => state.content.musicButtonChoice)\r\n\r\n\r\n    // console.log(`spotify current search keyword from button is: ${userMusic}`)\r\n    // console.log(`spotify current token is: ${musicToken}`)\r\n\r\n    // const spotifyApi = new SpotifyWebApi({\r\n    //     clientId: `${musicid}`,\r\n    // })\r\n\r\n    // spotifyApi.setAccessToken(`${musicToken}`)\r\n\r\n    // useEffect(() => {\r\n    //     if (musicToken === \"none token\") return\r\n    //     spotifyApi.setAccessToken(musicToken)\r\n    // }, [musicToken])\r\n\r\n    // const musicDummyID = `1DFixLWuPkv3KT3TnV35m3`\r\n\r\n    // var userMusicContent = `pending`\r\n\r\n    // spotifyApi.searchPlaylists(`${userMusic}`).then(\r\n    //     (res) => {\r\n    //         //save to an array?\r\n    //         console.log(`playlist res:`, res.body)\r\n    //         var playlistMusic = res.body.playlists.items\r\n    //         var playlistCodes = playlistMusic.map(playlist => {\r\n    //             return playlist.id\r\n    //         })\r\n    //         userMusicContent = playlistCodes\r\n    //         console.log(\"current content list\", userMusicContent)\r\n    //     }\r\n    // ).catch((err) => {\r\n    //     console.log('Something went wrong!', err);\r\n    // })\r\n\r\n    // console.log(userMusicContent)\r\n\r\n"]},"metadata":{},"sourceType":"module"}