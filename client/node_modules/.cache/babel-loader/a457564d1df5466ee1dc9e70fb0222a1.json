{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\musicControls.js\",\n    _s = $RefreshSig$();\n\nimport PauseButton from \"./pauseButton\";\nimport PlayButton from \"./playButton\";\nimport ResumeButton from \"./resumeButton\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MusicControls(props) {\n  _s();\n\n  console.log(\"print props for music controls\");\n  console.log(props);\n  let musicArrayList = props.songList;\n  let numSongsAvailable = musicArrayList.length;\n  console.log(`current music control list is ${numSongsAvailable} songs long`); // next and previous logic for songs\n\n  const [songArrayNum, setSongArrayNumber] = useState(0);\n\n  function nextSongHandler() {\n    setSongArrayNumber(songArrayNum + 1);\n  }\n\n  function prevSongHandler() {\n    setSongArrayNumber(songArrayNum - 1);\n  }\n\n  let currentSong = musicArrayList[0]; // const [nowSong, setNowSong] = useState(currentSong)\n\n  console.log(\"data from current song in song conrols\");\n  console.log(currentSong); // console.log(`name of song playing is ${nowSong.track.name}`)\n\n  let content = \"none\";\n\n  if (musicArrayList.length < 5) {\n    content = \"song name broken????\";\n  } else {\n    content = \"song name not broken\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-info m-3 p-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"music controls\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [songArrayNum > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-light\",\n            onClick: prevSongHandler,\n            children: \"prev track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), songArrayNum < numSongsAvailable - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-light\",\n            onClick: nextSongHandler,\n            children: \"next track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n          currentSongCode: \"song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PauseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ResumeButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MusicControls, \"9dTw+RypmjiN1Pr2xL1YqhVb67I=\");\n\n_c = MusicControls;\nexport default MusicControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicControls\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/musicControls.js"],"names":["PauseButton","PlayButton","ResumeButton","useState","MusicControls","props","console","log","musicArrayList","songList","numSongsAvailable","length","songArrayNum","setSongArrayNumber","nextSongHandler","prevSongHandler","currentSong","content"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAI1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AAEAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,cAAc,GAAGH,KAAK,CAACI,QAA3B;AACA,MAAIC,iBAAiB,GAAGF,cAAc,CAACG,MAAvC;AAEAL,EAAAA,OAAO,CAACC,GAAR,CAAa,iCAAgCG,iBAAkB,aAA/D,EAV0B,CAY1B;;AACA,QAAM,CAACE,YAAD,EAAeC,kBAAf,IAAqCV,QAAQ,CAAC,CAAD,CAAnD;;AAEA,WAASW,eAAT,GAA2B;AACvBD,IAAAA,kBAAkB,CAACD,YAAY,GAAG,CAAhB,CAAlB;AACH;;AAED,WAASG,eAAT,GAA2B;AACvBF,IAAAA,kBAAkB,CAACD,YAAY,GAAG,CAAhB,CAAlB;AACH;;AAED,MAAII,WAAW,GAAGR,cAAc,CAAC,CAAD,CAAhC,CAvB0B,CA0B1B;;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYS,WAAZ,EA7B0B,CA8B1B;;AAEA,MAAIC,OAAO,GAAG,MAAd;;AAEA,MAAIT,cAAc,CAACG,MAAf,GAAwB,CAA5B,EAA+B;AAC3BM,IAAAA,OAAO,GAAG,sBAAV;AACH,GAFD,MAEO;AACHA,IAAAA,OAAO,GAAG,sBAAV;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAA,gDAEI;AAAA,gCACI;AAAA,oBACKA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,qBACKL,YAAY,GAAG,CAAf,iBACG;AAAQ,YAAA,SAAS,EAAC,uBAAlB;AAA0C,YAAA,OAAO,EAAEG,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,EAMQH,YAAY,GAAGF,iBAAiB,GAAG,CAAnC,iBACA;AAAQ,YAAA,SAAS,EAAC,uBAAlB;AAA0C,YAAA,OAAO,EAAEI,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAcI,QAAC,UAAD;AAAY,UAAA,eAAe,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAlEQV,a;;KAAAA,a;AAqET,eAAeA,aAAf","sourcesContent":["import PauseButton from \"./pauseButton\"\r\nimport PlayButton from \"./playButton\"\r\nimport ResumeButton from \"./resumeButton\"\r\n\r\nimport { useState } from \"react\"\r\n\r\n\r\nfunction MusicControls(props) {\r\n\r\n\r\n\r\n    console.log(\"print props for music controls\")\r\n\r\n    console.log(props)\r\n    let musicArrayList = props.songList\r\n    let numSongsAvailable = musicArrayList.length\r\n\r\n    console.log(`current music control list is ${numSongsAvailable} songs long`)\r\n\r\n    // next and previous logic for songs\r\n    const [songArrayNum, setSongArrayNumber] = useState(0)\r\n\r\n    function nextSongHandler() {\r\n        setSongArrayNumber(songArrayNum + 1)\r\n    }\r\n\r\n    function prevSongHandler() {\r\n        setSongArrayNumber(songArrayNum - 1)\r\n    }\r\n\r\n    let currentSong = musicArrayList[0]\r\n\r\n\r\n    // const [nowSong, setNowSong] = useState(currentSong)\r\n\r\n    console.log(\"data from current song in song conrols\")\r\n    console.log(currentSong)\r\n    // console.log(`name of song playing is ${nowSong.track.name}`)\r\n\r\n    let content = \"none\"\r\n\r\n    if (musicArrayList.length < 5) {\r\n        content = \"song name broken????\"\r\n    } else {\r\n        content = \"song name not broken\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"bg-info m-3 p-3\">\r\n            <div>\r\n                music controls\r\n                <div>\r\n                    <div>\r\n                        {content}\r\n                    </div>\r\n                    <div>\r\n                        {songArrayNum > 0 &&\r\n                            <button className=\"btn btn-outline-light\" onClick={prevSongHandler}>prev track</button>\r\n                        }\r\n\r\n                        {\r\n                            songArrayNum < numSongsAvailable - 1 &&\r\n                            <button className=\"btn btn-outline-light\" onClick={nextSongHandler}>next track</button>\r\n                        }\r\n                    </div>\r\n                    <PlayButton currentSongCode={\"song\"} />\r\n                    <PauseButton />\r\n                    <ResumeButton />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MusicControls"]},"metadata":{},"sourceType":"module"}