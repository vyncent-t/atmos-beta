{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\MusicForm.js\",\n    _s = $RefreshSig$();\n\nimport MusicButton from \"./MusicButton\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./ContentMenuStyles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction MusicForm(props) {\n  _s();\n\n  const musicToken = localStorage.getItem(\"spotifyToken\");\n  console.log(`need the normal music token ${musicToken}`);\n  const musicChoice = useSelector(state => state.content.musicButtonChoice); // this function will be ran within the promise of each api req below, it will take the entire response object and select the first 10 playlist items to be saved in local storage\n\n  function updateMusicContent(content) {\n    for (let i = 0; i < 10; i++) {\n      localStorage.setItem(`musicplaylistcode${i}`, `${content[i]}`);\n    }\n  } // by default the fresh menu has a value of \"none\" for the music genre playlist, this makes the default data search for peaceful unless a music genre is clicked, making the musicChoice variable change - but the button to create a room isnt going to render unless the user clicks both music and video options\n\n\n  if (musicChoice === \"none\") {\n    axios.post('/spotify-set', {\n      userData: {\n        musicKey: \"peaceful\",\n        accessToken: `${musicToken}`\n      }\n    }).then(res => {\n      console.log(`music playlist res:`, res); // the following is printed on the browser console\n\n      console.log(`user custom music for default`); // response print from the spotify custom you need to expand in browser console\n\n      console.log(res);\n      console.log(\"THE LINE ABOVE IS THE RES FROM THE SPOTIFY CUSTOM YOU NEED TO EXPAND IT INTO DATA THEN PLAYLISTS\"); // NEED TO FORMAT AS STRING COMMA OBJECT FOR IT TO READ IN CONSOLE\n\n      console.log(`reading music playlist res: `, res.data.playlists.items); // now we use the function from above\n\n      var playlistMusicItems = res.data.playlists.items;\n      var playlistCodes = playlistMusicItems.map(playlistCode => {\n        return playlistCode.id;\n      });\n      updateMusicContent(playlistCodes);\n      var playlistZeroID = localStorage.getItem(`musicplaylistcode0`);\n      console.log(\"playlist zero preload ID: \", playlistZeroID);\n    }).catch(error => {\n      console.log(error);\n    });\n  } else {\n    axios.post('/spotify-set', {\n      userData: {\n        musicKey: `relax ${musicChoice}`,\n        accessToken: `${musicToken}`\n      }\n    }).then(res => {\n      console.log(`music playlist res:`, res); // the following is printed on the browser console\n\n      console.log(`user custom music for ${musicChoice}`); // response print from the spotify custom you need to expand in browser console\n\n      console.log(res);\n      console.log(\"THE LINE ABOVE IS THE RES FROM THE SPOTIFY CUSTOM YOU NEED TO EXPAND IT INTO DATA THEN PLAYLISTS\"); // NEED TO FORMAT AS STRING COMMA OBJECT FOR IT TO READ IN CONSOLE\n\n      console.log(`reading music playlist res: `, res.data.playlists.items); // now we use the function from above\n\n      var playlistMusicItems = res.data.playlists.items;\n      var playlistCodes = playlistMusicItems.map(playlist => {\n        return playlist.id;\n      });\n      updateMusicContent(playlistCodes);\n      var playlistZeroID = localStorage.getItem(`musicplaylistcode0`);\n      console.log(\"playlist zero preload ID: \", playlistZeroID);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form_container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Music Choices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Your current music choice: ${musicChoice}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.choice_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_choice,\n        children: [/*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Piano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Coffee Shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Acoustic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Lofi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Yoga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Piano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Coffee Shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Acoustic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Lofi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Yoga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Piano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Coffee Shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Acoustic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Lofi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Yoga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Piano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Coffee Shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Acoustic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Lofi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicButton, {\n          musicKeyword: \"Yoga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MusicForm, \"KIP710bpTPHScIj8L68EtB//2E4=\", false, function () {\n  return [useSelector];\n});\n\n_c = MusicForm;\nexport default MusicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicForm\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/MusicForm.js"],"names":["MusicButton","useEffect","useSelector","styles","axios","require","MusicForm","props","musicToken","localStorage","getItem","console","log","musicChoice","state","content","musicButtonChoice","updateMusicContent","i","setItem","post","userData","musicKey","accessToken","then","res","data","playlists","items","playlistMusicItems","playlistCodes","map","playlistCode","id","playlistZeroID","catch","error","playlist","form_container","choice_container","form_choice"],"mappings":"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","sourcesContent":["import MusicButton from \"./MusicButton\"\r\nimport { useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport styles from \"./ContentMenuStyles.module.css\"\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nfunction MusicForm(props) {\r\n    const musicToken = localStorage.getItem(\"spotifyToken\")\r\n    console.log(`need the normal music token ${musicToken}`)\r\n    const musicChoice = useSelector((state) => state.content.musicButtonChoice)\r\n\r\n    // this function will be ran within the promise of each api req below, it will take the entire response object and select the first 10 playlist items to be saved in local storage\r\n\r\n    function updateMusicContent(content) {\r\n        for (let i = 0; i < 10; i++) {\r\n            localStorage.setItem(`musicplaylistcode${i}`, `${content[i]}`)\r\n        }\r\n    }\r\n\r\n\r\n    // by default the fresh menu has a value of \"none\" for the music genre playlist, this makes the default data search for peaceful unless a music genre is clicked, making the musicChoice variable change - but the button to create a room isnt going to render unless the user clicks both music and video options\r\n\r\n    if (musicChoice === \"none\") {\r\n\r\n        axios.post('/spotify-set', {\r\n            userData: {\r\n                musicKey: \"peaceful\",\r\n                accessToken: `${musicToken}`\r\n            }\r\n        }).then(\r\n            (res) => {\r\n                console.log(`music playlist res:`, res)\r\n                // the following is printed on the browser console\r\n                console.log(`user custom music for default`)\r\n                // response print from the spotify custom you need to expand in browser console\r\n                console.log(res)\r\n                console.log(\"THE LINE ABOVE IS THE RES FROM THE SPOTIFY CUSTOM YOU NEED TO EXPAND IT INTO DATA THEN PLAYLISTS\")\r\n                // NEED TO FORMAT AS STRING COMMA OBJECT FOR IT TO READ IN CONSOLE\r\n                console.log(`reading music playlist res: `, res.data.playlists.items)\r\n\r\n                // now we use the function from above\r\n\r\n                var playlistMusicItems = res.data.playlists.items\r\n                var playlistCodes = playlistMusicItems.map(playlistCode => {\r\n                    return playlistCode.id\r\n                })\r\n                updateMusicContent(playlistCodes)\r\n                var playlistZeroID = localStorage.getItem(`musicplaylistcode0`)\r\n                console.log(\"playlist zero preload ID: \", playlistZeroID)\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    } else {\r\n        axios.post('/spotify-set', {\r\n            userData: {\r\n                musicKey: `relax ${musicChoice}`,\r\n                accessToken: `${musicToken}`\r\n            }\r\n        }).then(\r\n            (res) => {\r\n                console.log(`music playlist res:`, res)\r\n                // the following is printed on the browser console\r\n                console.log(`user custom music for ${musicChoice}`)\r\n                // response print from the spotify custom you need to expand in browser console\r\n                console.log(res)\r\n                console.log(\"THE LINE ABOVE IS THE RES FROM THE SPOTIFY CUSTOM YOU NEED TO EXPAND IT INTO DATA THEN PLAYLISTS\")\r\n                // NEED TO FORMAT AS STRING COMMA OBJECT FOR IT TO READ IN CONSOLE\r\n                console.log(`reading music playlist res: `, res.data.playlists.items)\r\n\r\n                // now we use the function from above\r\n\r\n                var playlistMusicItems = res.data.playlists.items\r\n                var playlistCodes = playlistMusicItems.map(playlist => {\r\n                    return playlist.id\r\n                })\r\n                updateMusicContent(playlistCodes)\r\n                var playlistZeroID = localStorage.getItem(`musicplaylistcode0`)\r\n                console.log(\"playlist zero preload ID: \", playlistZeroID)\r\n            }\r\n        ).catch(\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.form_container}>\r\n            <h2>Music Choices</h2>\r\n            <p>{`Your current music choice: ${musicChoice}`}</p>\r\n            <div className={styles.choice_container}>\r\n                <div className={styles.form_choice}>\r\n                    <MusicButton musicKeyword=\"Piano\" />\r\n                    <MusicButton musicKeyword=\"Coffee Shop\" />\r\n                    <MusicButton musicKeyword=\"Acoustic\" />\r\n                    <MusicButton musicKeyword=\"Lofi\" />\r\n                    <MusicButton musicKeyword=\"Yoga\" />\r\n\r\n\r\n                    <MusicButton musicKeyword=\"Piano\" />\r\n                    <MusicButton musicKeyword=\"Coffee Shop\" />\r\n                    <MusicButton musicKeyword=\"Acoustic\" />\r\n                    <MusicButton musicKeyword=\"Lofi\" />\r\n                    <MusicButton musicKeyword=\"Yoga\" />\r\n\r\n                    <MusicButton musicKeyword=\"Piano\" />\r\n                    <MusicButton musicKeyword=\"Coffee Shop\" />\r\n                    <MusicButton musicKeyword=\"Acoustic\" />\r\n                    <MusicButton musicKeyword=\"Lofi\" />\r\n                    <MusicButton musicKeyword=\"Yoga\" />\r\n\r\n                    <MusicButton musicKeyword=\"Piano\" />\r\n                    <MusicButton musicKeyword=\"Coffee Shop\" />\r\n                    <MusicButton musicKeyword=\"Acoustic\" />\r\n                    <MusicButton musicKeyword=\"Lofi\" />\r\n                    <MusicButton musicKeyword=\"Yoga\" />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicForm"]},"metadata":{},"sourceType":"module"}