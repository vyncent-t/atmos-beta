{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Root reference for iframes.\n */\n\n\nvar root;\n\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn('Using browser-only version of superagent in non-browser environment');\n  root = void 0;\n} else {\n  // Web Worker\n  root = self;\n}\n\nvar Emitter = require('component-emitter');\n\nvar safeStringify = require('fast-safe-stringify');\n\nvar qs = require('qs');\n\nvar RequestBase = require('./request-base');\n\nvar isObject = require('./is-object');\n\nvar ResponseBase = require('./response-base');\n\nvar Agent = require('./agent-base');\n/**\n * Noop.\n */\n\n\nfunction noop() {}\n/**\n * Expose `request`.\n */\n\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  } // url first\n\n\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\nvar request = exports;\nexports.Request = Request;\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest && (!root.location || root.location.protocol !== 'file:' || !root.ActiveXObject)) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch (_unused) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch (_unused2) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch (_unused3) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch (_unused4) {}\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\n\nvar trim = ''.trim ? function (s) {\n  return s.trim();\n} : function (s) {\n  return s.replace(/(^\\s*|\\s*$)/g, '');\n};\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join('&');\n}\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val === undefined) return;\n\n  if (val === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(val)) {\n    val.forEach(function (v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for (var subkey in val) {\n      if (Object.prototype.hasOwnProperty.call(val, subkey)) pushEncodedKeyValuePair(pairs, \"\".concat(key, \"[\").concat(subkey, \"]\"), val[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(val));\n  }\n}\n/**\n * Expose serialization method.\n */\n\n\nrequest.serializeObject = serialize;\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n\n    if (pos === -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n/**\n * Expose parser.\n */\n\n\nrequest.parseString = parseString;\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr; // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\n  this.text = this.req.method !== 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status; // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers; // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method === 'HEAD' ? null : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n} // eslint-disable-next-line new-cap\n\n\nResponseBase(Response.prototype);\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (str) {\n  var parse = request.parse[this.type];\n\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && str && (str.length > 0 || str instanceof Object) ? parse(str) : null;\n};\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\n\nResponse.prototype.toError = function () {\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n  var msg = \"cannot \".concat(method, \" \").concat(url, \" (\").concat(this.status, \")\");\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n  return err;\n};\n/**\n * Expose `Response`.\n */\n\n\nrequest.Response = Response;\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n\n  this._header = {}; // coerces header names to lowercase\n\n  this.on('end', function () {\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err_) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = err_; // issue #675: return the raw response if the response parsing fails\n\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType === 'undefined' ? self.xhr.responseText : self.xhr.response; // issue #876: return the http status code if the response parsing fails\n\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n    var new_err;\n\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || res.text || 'Unsuccessful HTTP response');\n      }\n    } catch (err_) {\n      new_err = err_; // ok() callback can throw\n    } // #1000 don't catch errors from the callback to avoid double calling it\n\n\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n// eslint-disable-next-line new-cap\n\n\nEmitter(Request.prototype); // eslint-disable-next-line new-cap\n\nRequestBase(Request.prototype);\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n\n  if (_typeof(pass) === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  var encoder = function encoder(string) {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.query = function (val) {\n  if (typeof val !== 'string') val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\n\nRequest.prototype.crossDomainError = function () {\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n  this.callback(err);\n}; // This only warns, because the request is still likely to work\n\n\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca; // This throws, because it can't send/receive data as expected\n\nRequest.prototype.write = function () {\n  throw new Error('Streaming is not supported in browser version of superagent');\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\n\nRequest.prototype._isHost = function (obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && _typeof(obj) === 'object' && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n};\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn('Warning: .end() was called twice. This is not supported in superagent');\n  }\n\n  this._endCalled = true; // store callback\n\n  this._callback = fn || noop; // querystring\n\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  var self = this; // upload timeout it's wokrs only if deadline timeout is off\n\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(function () {\n      self._timeoutError('Upload timeout of ', self._uploadTimeout, 'ETIMEDOUT');\n    }, this._uploadTimeout);\n  }\n}; // eslint-disable-next-line complexity\n\n\nRequest.prototype._end = function () {\n  if (this._aborted) return this.callback(new Error('The request has been aborted even before .end() was called'));\n  var self = this;\n  this.xhr = request.getXHR();\n  var xhr = this.xhr;\n  var data = this._formData || this._data;\n\n  this._setTimeouts(); // state change\n\n\n  xhr.onreadystatechange = function () {\n    var readyState = xhr.readyState;\n\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    } // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n\n\n    var status;\n\n    try {\n      status = xhr.status;\n    } catch (_unused5) {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  }; // progress\n\n\n  var handleProgress = function handleProgress(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n\n      if (xhr.upload) {\n        xhr.upload.addEventListener('progress', handleProgress.bind(null, 'upload'));\n      }\n    } catch (_unused6) {// Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  } // initiate request\n\n\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  } // CORS\n\n\n  if (this._withCredentials) xhr.withCredentials = true; // body\n\n  if (!this._formData && this.method !== 'GET' && this.method !== 'HEAD' && typeof data !== 'string' && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n\n    var _serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\n    if (!_serialize && isJSON(contentType)) {\n      _serialize = request.serialize['application/json'];\n    }\n\n    if (_serialize) data = _serialize(data);\n  } // set header fields\n\n\n  for (var field in this.header) {\n    if (this.header[field] === null) continue;\n    if (Object.prototype.hasOwnProperty.call(this.header, field)) xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  } // send stuff\n\n\n  this.emit('request', this); // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = function () {\n  return new Agent();\n};\n\n['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE'].forEach(function (method) {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    var req = new request.Request(method, url);\n\n    this._setDefaults(req);\n\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\nAgent.prototype.del = Agent.prototype.delete;\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function (url, data, fn) {\n  var req = request('GET', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.head = function (url, data, fn) {\n  var req = request('HEAD', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.options = function (url, data, fn) {\n  var req = request('OPTIONS', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nfunction del(url, data, fn) {\n  var req = request('DELETE', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest.del = del;\nrequest.delete = del;\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function (url, data, fn) {\n  var req = request('PATCH', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.post = function (url, data, fn) {\n  var req = request('POST', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.put = function (url, data, fn) {\n  var req = request('PUT', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};","map":{"version":3,"mappings":"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","names":["root","window","self","console","warn","Emitter","require","safeStringify","qs","RequestBase","isObject","ResponseBase","Agent","noop","module","exports","method","url","Request","end","arguments","length","request","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","Error","trim","s","replace","serialize","obj","pairs","key","Object","prototype","hasOwnProperty","call","pushEncodedKeyValuePair","join","val","undefined","push","encodeURI","Array","isArray","forEach","v","subkey","encodeURIComponent","serializeObject","parseString","str","split","pair","pos","i","len","indexOf","decodeURIComponent","slice","types","html","json","xml","urlencoded","form","stringify","parse","JSON","parseHeader","lines","fields","index","line","field","toLowerCase","isJSON","mime","test","Response","req","xhr","text","responseType","responseText","statusText","status","_setStatusProperties","headers","getAllResponseHeaders","header","getResponseHeader","_setHeaderProperties","_responseType","body","response","_parseBody","type","_parser","toError","msg","err","_query","_header","on","res","err_","original","rawResponse","statusCode","callback","emit","new_err","_isResponseOK","set","accept","auth","user","pass","options","_typeof","btoa","encoder","string","_auth","query","attach","file","_data","_getFormData","append","name","_formData","FormData","_shouldRetry","_retry","fn","_callback","clearTimeout","_maxRetries","retries","_retries","crossDomainError","crossDomain","agent","ca","buffer","write","pipe","_isHost","toString","_endCalled","_finalizeQueryString","_end","_setUploadTimeout","_uploadTimeout","_uploadTimeoutTimer","setTimeout","_timeoutError","_aborted","data","_setTimeouts","onreadystatechange","readyState","_responseTimeoutTimer","timedout","handleProgress","direction","e","total","percent","loaded","hasListeners","addEventListener","bind","upload","username","password","open","_withCredentials","withCredentials","contentType","_serializer","setRequestHeader","send","_setDefaults","del","delete","get","head","patch","post","put"],"sources":["../src/client.js"],"sourcesContent":["/**\n * Root reference for iframes.\n */\n\nlet root;\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn(\n    'Using browser-only version of superagent in non-browser environment'\n  );\n  root = this;\n} else {\n  // Web Worker\n  root = self;\n}\n\nconst Emitter = require('component-emitter');\nconst safeStringify = require('fast-safe-stringify');\nconst qs = require('qs');\nconst RequestBase = require('./request-base');\nconst isObject = require('./is-object');\nconst ResponseBase = require('./response-base');\nconst Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\n\nconst request = exports;\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (\n    root.XMLHttpRequest &&\n    (!root.location ||\n      root.location.protocol !== 'file:' ||\n      !root.ActiveXObject)\n  ) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch {}\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = ''.trim ? (s) => s.trim() : (s) => s.replace(/(^\\s*|\\s*$)/g, '');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  const pairs = [];\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val === undefined) return;\n  if (val === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(val)) {\n    val.forEach((v) => {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for (const subkey in val) {\n      if (Object.prototype.hasOwnProperty.call(val, subkey))\n        pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, val[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + '=' + encodeURIComponent(val));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(str) {\n  const obj = {};\n  const pairs = str.split('&');\n  let pair;\n  let pos;\n\n  for (let i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos === -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(\n        pair.slice(pos + 1)\n      );\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': qs.stringify,\n  'application/json': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  const lines = str.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let val;\n\n  for (let i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text =\n    (this.req.method !== 'HEAD' &&\n      (this.xhr.responseType === '' || this.xhr.responseType === 'text')) ||\n    typeof this.xhr.responseType === 'undefined'\n      ? this.xhr.responseText\n      : null;\n  this.statusText = this.req.xhr.statusText;\n  let { status } = this.xhr;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers;\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body =\n      this.req.method === 'HEAD'\n        ? null\n        : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\n\n// eslint-disable-next-line new-cap\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (str) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && str && (str.length > 0 || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { url } = req;\n\n  const msg = `cannot ${method} ${url} (${this.status})`;\n  const err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', () => {\n    let err = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err_) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = err_;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse =\n          typeof self.xhr.responseType === 'undefined'\n            ? self.xhr.responseText\n            : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    let new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(\n          res.statusText || res.text || 'Unsuccessful HTTP response'\n        );\n      }\n    } catch (err_) {\n      new_err = err_; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n// eslint-disable-next-line new-cap\nEmitter(Request.prototype);\n// eslint-disable-next-line new-cap\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  const encoder = (string) => {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (val) {\n  if (typeof val !== 'string') val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function () {\n  const err = new Error(\n    'Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.'\n  );\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca;\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.write = () => {\n  throw new Error(\n    'Streaming is not supported in browser version of superagent'\n  );\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return (\n    obj &&\n    typeof obj === 'object' &&\n    !Array.isArray(obj) &&\n    Object.prototype.toString.call(obj) !== '[object Object]'\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn(\n      'Warning: .end() was called twice. This is not supported in superagent'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  const self = this;\n\n  // upload timeout it's wokrs only if deadline timeout is off\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        'Upload timeout of ',\n        self._uploadTimeout,\n        'ETIMEDOUT'\n      );\n    }, this._uploadTimeout);\n  }\n};\n\n// eslint-disable-next-line complexity\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error('The request has been aborted even before .end() was called')\n    );\n\n  const self = this;\n  this.xhr = request.getXHR();\n  const { xhr } = this;\n  let data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = () => {\n    const { readyState } = xhr;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    let status;\n    try {\n      status = xhr.status;\n    } catch {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  };\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = (e.loaded / e.total) * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n      if (xhr.upload) {\n        xhr.upload.addEventListener(\n          'progress',\n          handleProgress.bind(null, 'upload')\n        );\n      }\n    } catch {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (\n    !this._formData &&\n    this.method !== 'GET' &&\n    this.method !== 'HEAD' &&\n    typeof data !== 'string' &&\n    !this._isHost(data)\n  ) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize =\n      this._serializer ||\n      request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n\n    if (Object.prototype.hasOwnProperty.call(this.header, field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = () => new Agent();\n\n['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE'].forEach((method) => {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    const req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype.delete;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const req = request('GET', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const req = request('HEAD', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const req = request('OPTIONS', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const req = request('DELETE', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const req = request('PATCH', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const req = request('POST', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const req = request('PUT', url);\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n"]},"metadata":{},"sourceType":"script"}