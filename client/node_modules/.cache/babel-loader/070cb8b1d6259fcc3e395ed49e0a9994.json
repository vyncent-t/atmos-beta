{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\songSection.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport MusicControls from \"./musicControls\";\nimport SongCard from \"./songCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongSection(props) {\n  // const [songsLoading, setSongsLoading] = useState(true)\n  // replace props.whatever.we to correct data format\n  // replace this too\n  let musicInfo = props.playlistInfo;\n  let musicList = musicInfo.tracks;\n  console.log(\"printing array of tracks in song section\");\n  console.log(musicList);\n  let tracksArray = []; // if the prop exists, loop through each prop and move it into the tracksArray array\n\n  if (musicList) {\n    musicList.forEach(el => tracksArray.push(el));\n    console.log(\"tracks array\");\n    console.log(tracksArray);\n  }\n\n  let content = \"songList\";\n\n  if (!musicList) {\n    content = \"broken\";\n  } else {\n    content = \"not broken\";\n  }\n\n  console.log(\"tracks data from playlist\", tracksArray); // const content = songsLoading ?\n  //     (<div>...is Loading</div>)\n  //     :\n  //     (<div> Loading Complete\n  //     </div>)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), tracksArray.map((song, index) => /*#__PURE__*/_jsxDEV(SongCard, {\n      uri: song.track.uri,\n      name: song.track.name // album={song.track.album.name}\n      ,\n      artist: song.track.artists[0].name,\n      id: song.track.id,\n      href: song.track.href\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SongSection;\nexport default SongSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongSection\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/songSection.js"],"names":["React","Fragment","useEffect","useState","MusicControls","SongCard","SongSection","props","musicInfo","playlistInfo","musicList","tracks","console","log","tracksArray","forEach","el","push","content","map","song","index","track","uri","name","artists","id","href"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAIxB;AAGA;AACA;AACA,MAAIC,SAAS,GAAGD,KAAK,CAACE,YAAtB;AACA,MAAIC,SAAS,GAAGF,SAAS,CAACG,MAA1B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,MAAII,WAAW,GAAG,EAAlB,CAfwB,CAiBxB;;AACA,MAAIJ,SAAJ,EAAe;AACXA,IAAAA,SAAS,CAACK,OAAV,CACIC,EAAE,IAAIF,WAAW,CAACG,IAAZ,CAAiBD,EAAjB,CADV;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACH;;AAKD,MAAII,OAAO,GAAG,UAAd;;AAEA,MAAI,CAACR,SAAL,EAAgB;AACZQ,IAAAA,OAAO,GAAG,QAAV;AACH,GAFD,MAEO;AACHA,IAAAA,OAAO,GAAG,YAAV;AACH;;AACDN,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCC,WAAzC,EApCwB,CAuCxB;AACA;AACA;AACA;AACA;;AAIA,sBACI;AAAA,4BACI;AAAA,gBACKI;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,EAMQJ,WAAW,CAACK,GAAZ,CACI,CAACC,IAAD,EAAOC,KAAP,kBACI,QAAC,QAAD;AACI,MAAA,GAAG,EAAED,IAAI,CAACE,KAAL,CAAWC,GADpB;AAEI,MAAA,IAAI,EAAEH,IAAI,CAACE,KAAL,CAAWE,IAFrB,CAGI;AAHJ;AAII,MAAA,MAAM,EAAEJ,IAAI,CAACE,KAAL,CAAWG,OAAX,CAAmB,CAAnB,EAAsBD,IAJlC;AAKI,MAAA,EAAE,EAAEJ,IAAI,CAACE,KAAL,CAAWI,EALnB;AAMI,MAAA,IAAI,EAAEN,IAAI,CAACE,KAAL,CAAWK;AANrB;AAAA;AAAA;AAAA;AAAA,YAFR,CANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;KArEQrB,W;AAuET,eAAeA,WAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport MusicControls from \"./musicControls\";\r\n\r\nimport SongCard from \"./songCard\"\r\n\r\n\r\n\r\nfunction SongSection(props) {\r\n\r\n\r\n\r\n    // const [songsLoading, setSongsLoading] = useState(true)\r\n\r\n\r\n    // replace props.whatever.we to correct data format\r\n    // replace this too\r\n    let musicInfo = props.playlistInfo\r\n    let musicList = musicInfo.tracks\r\n\r\n    console.log(\"printing array of tracks in song section\")\r\n    console.log(musicList)\r\n\r\n    let tracksArray = []\r\n\r\n    // if the prop exists, loop through each prop and move it into the tracksArray array\r\n    if (musicList) {\r\n        musicList.forEach(\r\n            el => tracksArray.push(el)\r\n        )\r\n        console.log(\"tracks array\")\r\n        console.log(tracksArray)\r\n    }\r\n\r\n\r\n\r\n\r\n    let content = \"songList\"\r\n\r\n    if (!musicList) {\r\n        content = \"broken\"\r\n    } else {\r\n        content = \"not broken\"\r\n    }\r\n    console.log(\"tracks data from playlist\", tracksArray)\r\n\r\n\r\n    // const content = songsLoading ?\r\n    //     (<div>...is Loading</div>)\r\n    //     :\r\n    //     (<div> Loading Complete\r\n    //     </div>)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {content}\r\n            </div>\r\n            {/* <MusicControls songList={tracksArray} /> */}\r\n            {\r\n                tracksArray.map(\r\n                    (song, index) => (\r\n                        <SongCard\r\n                            uri={song.track.uri}\r\n                            name={song.track.name}\r\n                            // album={song.track.album.name}\r\n                            artist={song.track.artists[0].name}\r\n                            id={song.track.id}\r\n                            href={song.track.href}\r\n                        />\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongSection"]},"metadata":{},"sourceType":"module"}