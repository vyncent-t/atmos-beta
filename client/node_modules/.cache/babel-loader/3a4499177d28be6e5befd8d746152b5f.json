{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\songSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport SongCard from \"./songCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongSection(props) {\n  _s();\n\n  const [songsLoading, setSongsLoading] = useState(true); // replace props.whatever.we to correct data format\n  // replace this too\n\n  let musicList = props.playlistInfo.tracks;\n  console.log(\"printing array of tracks in song section\");\n  console.log(musicList); // const songList = musicList.map(\n  //     (song) => {\n  //         return (\n  //             <SongCard\n  //                 key={song.track.id}\n  //                 name={song.track.name}\n  //                 album={song.track.album}\n  //                 uri={song.track.uri}\n  //             />\n  //         )\n  //     }\n  // )\n  // cheap work around to force the component to rerender, setting the text on the page to is loading then to loading complete / incoming data\n\n  setSongsLoading(true);\n  console.log(\"tracks data from playlist\", musicList);\n  setSongsLoading(false);\n  const content = songsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"...is Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" Loading Complete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongSection, \"7sYbX6jDU9TvspVpHftfcKi1yG0=\");\n\n_c = SongSection;\nexport default SongSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongSection\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/songSection.js"],"names":["React","Fragment","useEffect","useState","SongCard","SongSection","props","songsLoading","setSongsLoading","musicList","playlistInfo","tracks","console","log","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAIxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD,CAJwB,CAOxB;AACA;;AACA,MAAIM,SAAS,GAAGH,KAAK,CAACI,YAAN,CAAmBC,MAAnC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAZwB,CAcxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AACAD,EAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCJ,SAAzC;AACAD,EAAAA,eAAe,CAAC,KAAD,CAAf;AAGA,QAAMM,OAAO,GAAGP,YAAY,gBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB,gBAGvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHL;AAQA,sBACI;AAAA,cACKO;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhDQT,W;;KAAAA,W;AAkDT,eAAeA,WAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\n\r\nimport SongCard from \"./songCard\"\r\n\r\n\r\n\r\nfunction SongSection(props) {\r\n\r\n\r\n\r\n    const [songsLoading, setSongsLoading] = useState(true)\r\n\r\n\r\n    // replace props.whatever.we to correct data format\r\n    // replace this too\r\n    let musicList = props.playlistInfo.tracks\r\n\r\n    console.log(\"printing array of tracks in song section\")\r\n    console.log(musicList)\r\n\r\n    // const songList = musicList.map(\r\n    //     (song) => {\r\n    //         return (\r\n    //             <SongCard\r\n    //                 key={song.track.id}\r\n    //                 name={song.track.name}\r\n    //                 album={song.track.album}\r\n    //                 uri={song.track.uri}\r\n    //             />\r\n    //         )\r\n    //     }\r\n    // )\r\n\r\n\r\n\r\n    // cheap work around to force the component to rerender, setting the text on the page to is loading then to loading complete / incoming data\r\n    setSongsLoading(true)\r\n    console.log(\"tracks data from playlist\", musicList)\r\n    setSongsLoading(false)\r\n\r\n\r\n    const content = songsLoading ?\r\n        (<div>...is Loading</div>)\r\n        :\r\n        (<div> Loading Complete\r\n        </div>)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongSection"]},"metadata":{},"sourceType":"module"}