{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jento\\\\Desktop\\\\Projects\\\\main projects\\\\atmos-project\\\\client\\\\src\\\\components\\\\VideoContent.js\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport styles from \"./VideoContentStyles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getYouTubeID = require('get-youtube-id');\n\nfunction VideoContent() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let totalVideoAvailable = localStorage.getItem(\"videocodelength\"); // create the next and prev logic for videos\n\n  const [arrayNum, setArrayNumber] = useState(0);\n\n  function nextHandler() {\n    setArrayNumber(arrayNum + 1);\n  }\n\n  function prevHandler() {\n    setArrayNumber(arrayNum - 1);\n  }\n\n  const [youtubeWidth, setYoutubeWidth] = useState(document.documentElement.clientWidth - 200);\n  const [youtubeHeight, setYoutubeHeight] = useState(document.documentElement.clientHeight - 200);\n\n  function getWindowsDimensions() {\n    const {\n      innerWidth: width,\n      innerHeight: height\n    } = window;\n    setYoutubeWidth(width - 200);\n    setYoutubeHeight(height - 200);\n    return {\n      width,\n      height\n    };\n  }\n\n  function useWindowsDimentions() {\n    _s();\n\n    const [windowDimentions, setWindowsDimensions] = useState(getWindowsDimensions());\n    useEffect(() => {\n      function handleResize() {\n        setWindowsDimensions(getWindowsDimensions());\n      }\n\n      window.addEventListener('resize', handleResize);\n      console.log(`youtube size ${youtubeWidth} x ${youtubeHeight}`);\n      return windowDimentions;\n    }, []);\n  }\n\n  _s(useWindowsDimentions, \"FKEIKlFl34T+ImWdcEaTlp3mA8M=\");\n\n  function onReady(e) {\n    // access to player in all event handlers via event.target\n    e.target.playVideo();\n    e.target.setVolume(40);\n  }\n\n  let youtubeFullCode = localStorage.getItem(`videocontentcode${arrayNum}`);\n  let currentVideo = youtubeFullCode;\n  var youtubeCode = getYouTubeID(currentVideo);\n\n  if (arrayNum < -1) {\n    nextHandler();\n  }\n\n  console.log(\"window size \" + document.documentElement.clientWidth);\n  console.log(\"window size \" + document.documentElement.clientHeight); // var youtubeWidth = document.documentElement.clientWidth - 200\n  // var youtubeHeight = document.documentElement.clientHeight - 200\n\n  const opts = {\n    height: `${youtubeHeight}`,\n    width: `${youtubeWidth}`,\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n      setVolume: 50\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.video_content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [arrayNum > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.video_button,\n          onClick: prevHandler,\n          children: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 38\n        }, this), arrayNum < totalVideoAvailable - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.video_button,\n          onClick: nextHandler,\n          children: \"next video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: youtubeCode,\n        opts: opts,\n        onReady: onReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(VideoContent, \"jx7C2lr70V80Lw9qp3lL3NPYox0=\");\n\n_c = VideoContent;\nexport default VideoContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoContent\");","map":{"version":3,"sources":["C:/Users/jento/Desktop/Projects/main projects/atmos-project/client/src/components/VideoContent.js"],"names":["useEffect","useState","YouTube","styles","getYouTubeID","require","VideoContent","totalVideoAvailable","localStorage","getItem","arrayNum","setArrayNumber","nextHandler","prevHandler","youtubeWidth","setYoutubeWidth","document","documentElement","clientWidth","youtubeHeight","setYoutubeHeight","clientHeight","getWindowsDimensions","innerWidth","width","innerHeight","height","window","useWindowsDimentions","windowDimentions","setWindowsDimensions","handleResize","addEventListener","console","log","onReady","e","target","playVideo","setVolume","youtubeFullCode","currentVideo","youtubeCode","opts","playerVars","autoplay","video_content","video_button"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport YouTube from \"react-youtube\"\r\nimport styles from \"./VideoContentStyles.module.css\"\r\n\r\nvar getYouTubeID = require('get-youtube-id')\r\n\r\nfunction VideoContent() {\r\n\r\n    let totalVideoAvailable = localStorage.getItem(\"videocodelength\")\r\n\r\n    // create the next and prev logic for videos\r\n    const [arrayNum, setArrayNumber] = useState(0)\r\n\r\n    function nextHandler() {\r\n        setArrayNumber(arrayNum + 1)\r\n    }\r\n\r\n    function prevHandler() {\r\n        setArrayNumber(arrayNum - 1)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const [youtubeWidth, setYoutubeWidth] = useState((document.documentElement.clientWidth - 200))\r\n    const [youtubeHeight, setYoutubeHeight] = useState((document.documentElement.clientHeight - 200))\r\n\r\n\r\n\r\n    function getWindowsDimensions() {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        setYoutubeWidth((width - 200))\r\n        setYoutubeHeight((height - 200))\r\n        return {\r\n            width,\r\n            height\r\n        }\r\n    }\r\n\r\n    function useWindowsDimentions() {\r\n        const [windowDimentions, setWindowsDimensions] = useState(getWindowsDimensions())\r\n\r\n\r\n        useEffect(() => {\r\n            function handleResize() {\r\n                setWindowsDimensions(getWindowsDimensions())\r\n            }\r\n\r\n            window.addEventListener('resize', handleResize)\r\n            console.log(`youtube size ${youtubeWidth} x ${youtubeHeight}`)\r\n\r\n            return windowDimentions\r\n        }, [])\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function onReady(e) {\r\n        // access to player in all event handlers via event.target\r\n        e.target.playVideo();\r\n        e.target.setVolume(40)\r\n    }\r\n\r\n    let youtubeFullCode = localStorage.getItem(`videocontentcode${arrayNum}`)\r\n    let currentVideo = youtubeFullCode\r\n\r\n    var youtubeCode = getYouTubeID(currentVideo)\r\n\r\n    if (arrayNum < -1) {\r\n        nextHandler()\r\n    }\r\n\r\n    console.log(\"window size \" + document.documentElement.clientWidth)\r\n    console.log(\"window size \" + document.documentElement.clientHeight)\r\n\r\n    // var youtubeWidth = document.documentElement.clientWidth - 200\r\n    // var youtubeHeight = document.documentElement.clientHeight - 200\r\n\r\n    const opts = {\r\n        height: `${youtubeHeight}`,\r\n        width: `${youtubeWidth}`,\r\n        playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 1,\r\n            setVolume: 50\r\n        },\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.video_content}>\r\n            {/* <p>current array item: {arrayNum}</p>\r\n            <p>current array length: {youtubeArray.length}</p>\r\n            <p>{youtubeArray[0]}</p> */}\r\n            <div >\r\n                <div >\r\n                    {arrayNum > 0 && <button className={styles.video_button} onClick={prevHandler}>back</button>}\r\n                    {arrayNum < totalVideoAvailable - 1 && <button className={styles.video_button} onClick={nextHandler}>next video</button>}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <YouTube videoId={youtubeCode} opts={opts} onReady={onReady} />\r\n                {/* <iframe width=\"560\" height=\"315\"\r\n                    src={currentVideo} title=\"YouTube video player\"\r\n                    frameborder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\r\n                </iframe> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default VideoContent"]},"metadata":{},"sourceType":"module"}